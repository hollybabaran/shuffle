package ShuffleJava.gui;

/*Generated by MPS */

import javax.swing.JPanel;
import ShuffleJava.runtime.CardPile;
import javax.swing.JLabel;
import javax.swing.OverlayLayout;
import javax.swing.ImageIcon;
import java.awt.Dimension;
import java.awt.Color;
import java.awt.Graphics;

public class CardPileDisplay extends JPanel {
  private CardPile pile;
  private boolean cascading = false;
  private JLabel stack;
  private JLabel empty;


  public CardPileDisplay(CardPile pile) {
    // JComponent displays either a JButton "Stack", or a JLayeredPane "Cascade" 
    this.setLayout(new OverlayLayout(this));
    this.pile = pile;

    ClassLoader classLoader1 = getClass().getClassLoader();
    this.stack = new JLabel(new ImageIcon(classLoader1.getResource("stack.png")));
    this.stack.setAlignmentX(1.0f);
    this.stack.setAlignmentY(1.0f);


    ClassLoader classLoader2 = getClass().getClassLoader();
    this.empty = new JLabel(new ImageIcon(classLoader2.getResource("nothing.png")));
    this.empty.setAlignmentX(1.0f);
    this.empty.setAlignmentY(1.0f);

    // <node> 
    this.setPreferredSize(new Dimension(this.stack.getIcon().getIconWidth(), this.stack.getIcon().getIconHeight()));

    this.setBackground(new Color(21, 67, 31));

    this.add(this.empty);
  }



  public void cascade(Boolean cascade) {
    this.cascading = cascade;
  }



  public void update(Graphics g) {
    this.removeAll();
    if (this.cascading == false) {
      if (this.pile.size() > 0) {

        this.add(this.stack);
        this.stack.paintComponents(g);

        CardButton topcard = new CardButton(this.pile.getTopCard());
        topcard.setFaceup(this.pile.isFaceup());
        topcard.setAlignmentX(1.0f);
        topcard.setAlignmentY(1.0f);
        this.add(topcard);
        topcard.paintComponent(g);

      } else {
        this.add(this.empty);
        this.empty.paint(g);
      }
    } else {
      // cascade 
      // todo: something 
    }
  }



  public void paintComponent(Graphics g) {
    super.paintComponent(g);
    this.update(g);
    this.setVisible(true);
  }




}
