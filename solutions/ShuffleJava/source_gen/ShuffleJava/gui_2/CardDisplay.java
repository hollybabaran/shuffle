package ShuffleJava.gui_2;

/*Generated by MPS */

import java.awt.image.BufferedImage;
import ShuffleJava.runtime.Card;
import java.awt.Color;
import java.awt.geom.AffineTransform;
import javax.imageio.ImageIO;
import java.io.IOException;
import java.awt.Graphics;
import java.awt.Graphics2D;

public class CardDisplay implements ShuffleDraw {
  public static int CARD_HEIGHT = 70;
  public static int CARD_WIDTH = 48;


  private BufferedImage img;
  private Card card;
  protected ClassLoader classLoader;
  protected Color selectColor = new Color(84, 141, 255, 101);
  private boolean faceUp;

  private boolean isSideways;
  private AffineTransform rotate;


  public CardDisplay(Card c, boolean faceUp) {
    setCard(c);
    this.isSideways = false;
    this.faceUp = faceUp;
  }

  public CardDisplay(Card c, boolean faceUp, boolean sideways) {
    setCard(c);
    this.isSideways = sideways;
    this.faceUp = faceUp;

    /*
      if (isSideways) {
        double rotate = Math.toRadians(45);
        double locX = CARD_WIDTH / 2;
        double locY = CARD_HEIGHT / 2;
        this.rotate = AffineTransform.getRotateInstance(rotate, locX, locY);
      }
    */
  }




  public void setCard(Card c) {
    card = c;
  }



  private void update() {
    String imgName = (faceUp ? card.getSuit() + "_" + card.getRank() + ".png" : "deckback_small.jpg");
    classLoader = getClass().getClassLoader();
    try {
      img = ImageIO.read(classLoader.getResource(imgName));
    } catch (IOException e) {
      System.out.println("ERROR! StackedPileDisplay: topcard image not found");
    }
  }



  public int getWidth() {
    // <node> 
    return CARD_WIDTH;
  }

  public int getHeight() {
    // <node> 
    return CARD_HEIGHT;
  }



  public void draw(Graphics g, int x, int y) {
    update();
    /*
      if (!(this.isSideways)) {
        Graphics2D g2d = ((Graphics2D) g);
        g2d.drawImage(img, rotate, null);
      } else {
        g.drawImage(img, x, y, Color.WHITE, null);
      }
    */
    g.drawImage(img, x, y, Color.WHITE, null);
    if (faceUp) {
      g.setColor(Color.BLACK);
      g.drawRect(x, y, CARD_WIDTH, CARD_HEIGHT);
    }

    if (card.isSelected()) {
      g.setColor(this.selectColor);
      g.fillRect(x, y, getWidth(), getHeight());
    }
  }




  public void click(int x, int y) {
  }
}
