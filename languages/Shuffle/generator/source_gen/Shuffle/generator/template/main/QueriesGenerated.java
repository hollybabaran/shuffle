package Shuffle.generator.template.main;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.Generated;
import jetbrains.mps.generator.template.BaseMappingRuleContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.generator.template.PropertyMacroContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodeContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;

@Generated
public class QueriesGenerated {
  public final boolean NEEDS_OPCONTEXT = false;

  public static boolean baseMappingRule_Condition_1707132686103362161(final BaseMappingRuleContext _context) {
    return SPropertyOperations.hasValue(_context.getNode(), "suit", "spades", "spades");
  }

  public static boolean baseMappingRule_Condition_1707132686103377856(final BaseMappingRuleContext _context) {
    return SPropertyOperations.hasValue(_context.getNode(), "suit", "clubs", "spades");
  }

  public static boolean baseMappingRule_Condition_1707132686103378368(final BaseMappingRuleContext _context) {
    return SPropertyOperations.hasValue(_context.getNode(), "suit", "hearts", "spades");
  }

  public static boolean baseMappingRule_Condition_1707132686103379252(final BaseMappingRuleContext _context) {
    return SPropertyOperations.hasValue(_context.getNode(), "suit", "diamonds", "spades");
  }

  public static boolean baseMappingRule_Condition_1707132686103385454(final BaseMappingRuleContext _context) {
    return SPropertyOperations.hasValue(_context.getNode(), "rank", "two", "ace");
  }

  public static boolean baseMappingRule_Condition_1707132686103399976(final BaseMappingRuleContext _context) {
    return SPropertyOperations.hasValue(_context.getNode(), "rank", "three", "ace");
  }

  public static boolean baseMappingRule_Condition_1707132686103400879(final BaseMappingRuleContext _context) {
    return SPropertyOperations.hasValue(_context.getNode(), "rank", "four", "ace");
  }

  public static boolean baseMappingRule_Condition_1707132686103401434(final BaseMappingRuleContext _context) {
    return SPropertyOperations.hasValue(_context.getNode(), "rank", "five", "ace");
  }

  public static boolean baseMappingRule_Condition_1707132686103402037(final BaseMappingRuleContext _context) {
    return SPropertyOperations.hasValue(_context.getNode(), "rank", "six", "ace");
  }

  public static boolean baseMappingRule_Condition_1707132686103402428(final BaseMappingRuleContext _context) {
    return SPropertyOperations.hasValue(_context.getNode(), "rank", "seven", "ace");
  }

  public static boolean baseMappingRule_Condition_1707132686103402558(final BaseMappingRuleContext _context) {
    return SPropertyOperations.hasValue(_context.getNode(), "rank", "eight", "ace");
  }

  public static boolean baseMappingRule_Condition_1707132686103403355(final BaseMappingRuleContext _context) {
    return SPropertyOperations.hasValue(_context.getNode(), "rank", "nine", "ace");
  }

  public static boolean baseMappingRule_Condition_1707132686103409814(final BaseMappingRuleContext _context) {
    return SPropertyOperations.hasValue(_context.getNode(), "rank", "ten", "ace");
  }

  public static boolean baseMappingRule_Condition_1707132686103411165(final BaseMappingRuleContext _context) {
    return SPropertyOperations.hasValue(_context.getNode(), "rank", "jack", "ace");
  }

  public static boolean baseMappingRule_Condition_1707132686103412580(final BaseMappingRuleContext _context) {
    return SPropertyOperations.hasValue(_context.getNode(), "rank", "queen", "ace");
  }

  public static boolean baseMappingRule_Condition_1707132686103413519(final BaseMappingRuleContext _context) {
    return SPropertyOperations.hasValue(_context.getNode(), "rank", "king", "ace");
  }

  public static boolean baseMappingRule_Condition_1707132686103414506(final BaseMappingRuleContext _context) {
    return SPropertyOperations.hasValue(_context.getNode(), "rank", "ace", "ace");
  }

  public static Object propertyMacro_GetPropertyValue_7674520359934919972(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1472781009440830017(final PropertyMacroContext _context) {
    return SPropertyOperations.getInteger(_context.getNode(), "cardNumbers");
  }

  public static Object propertyMacro_GetPropertyValue_912009110482792793(final PropertyMacroContext _context) {
    return "deck";
  }

  public static SNode sourceNodeQuery_8142839966539356181(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "playerTurnBlock", true);
  }

  public static SNode sourceNodeQuery_465858332973658066(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "winConditionBlock", true), "condition", true);
  }

  public static SNode sourceNodeQuery_7674520359936029530(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "expression", true);
  }

  public static SNode sourceNodeQuery_1472781009440857300(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "pile1", true);
  }

  public static SNode sourceNodeQuery_1472781009440858998(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "pile2", true);
  }

  public static Iterable<SNode> sourceNodesQuery_1747264128838123057(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(SLinkOperations.getTarget(_context.getNode(), "setupBlock", true), "body", true);
  }

  public static Iterable<SNode> sourceNodesQuery_6796815332554477675(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "body", true);
  }

  public static Iterable<SNode> sourceNodesQuery_8142839966539474929(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "body", true);
  }

  public static Iterable<SNode> sourceNodesQuery_1707132686102880261(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "cards", true);
  }
}
