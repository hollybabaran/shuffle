package Shuffle.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.runtime.interpreted.StructureAspectInterpreted;

public class StructureAspectDescriptor implements jetbrains.mps.smodel.runtime.StructureAspectDescriptor {
  public StructureAspectDescriptor() {
  }

  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b, conceptFqName)) {
      case 0:
        return new ConceptDescriptorBuilder("Shuffle.structure.Card").super_("Shuffle.structure.Variable").parents("Shuffle.structure.Variable", "jetbrains.mps.lang.core.structure.INamedConcept").properties("value", "suit").create();
      case 1:
        return new ConceptDescriptorBuilder("Shuffle.structure.Command").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").abstract_().create();
      case 2:
        return new ConceptDescriptorBuilder("Shuffle.structure.Deal").super_("Shuffle.structure.Command").parents("Shuffle.structure.Command").children(new String[]{"deck"}, new boolean[]{false}).alias("deal", "").create();
      case 3:
        return new ConceptDescriptorBuilder("Shuffle.structure.Deck").super_("Shuffle.structure.Variable").parents("Shuffle.structure.Variable", "jetbrains.mps.lang.core.structure.INamedConcept").create();
      case 4:
        return new ConceptDescriptorBuilder("Shuffle.structure.DeckReference").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").references("deck").create();
      case 5:
        return new ConceptDescriptorBuilder("Shuffle.structure.Main").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.execution.util.structure.IMainClass", "jetbrains.mps.lang.core.structure.ScopeProvider").children(new String[]{"players", "variable", "program"}, new boolean[]{false, true, true}).create();
      case 6:
        return new ConceptDescriptorBuilder("Shuffle.structure.Number").super_("Shuffle.structure.Variable").parents("Shuffle.structure.Variable", "jetbrains.mps.lang.core.structure.INamedConcept").properties("value").children(new String[]{"expression"}, new boolean[]{false}).create();
      case 7:
        return new ConceptDescriptorBuilder("Shuffle.structure.NumberAssignment").super_("Shuffle.structure.Command").parents("Shuffle.structure.Command").children(new String[]{"expression", "variable"}, new boolean[]{false, false}).alias("set", "").create();
      case 8:
        return new ConceptDescriptorBuilder("Shuffle.structure.NumberReference").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").references("number").create();
      case 9:
        return new ConceptDescriptorBuilder("Shuffle.structure.Player").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").properties("number").create();
      case 10:
        return new ConceptDescriptorBuilder("Shuffle.structure.ShuffleDeck").super_("Shuffle.structure.Command").parents("Shuffle.structure.Command").children(new String[]{"deck"}, new boolean[]{false}).alias("shuffle", "").create();
      case 11:
        return new ConceptDescriptorBuilder("Shuffle.structure.Suit").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").references("suit").create();
      case 12:
        return new ConceptDescriptorBuilder("Shuffle.structure.Variable").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").abstract_().create();
      default:
        return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
    }
  }

  private static String[] stringSwitchCases_1htk8d_a0a0b = new String[]{"Shuffle.structure.Card", "Shuffle.structure.Command", "Shuffle.structure.Deal", "Shuffle.structure.Deck", "Shuffle.structure.DeckReference", "Shuffle.structure.Main", "Shuffle.structure.Number", "Shuffle.structure.NumberAssignment", "Shuffle.structure.NumberReference", "Shuffle.structure.Player", "Shuffle.structure.ShuffleDeck", "Shuffle.structure.Suit", "Shuffle.structure.Variable"};
}
